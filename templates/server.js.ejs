/* globals __dirname */
var _ = require('lodash');
var PATH = require('path');
var http = require('http');
var express = require('express');
var context = require('./context');
var config = context.Configuration;
var Logger = require('@irysius/utils').Logger;

// Connect/Express middleware
var body_parser = require('body-parser');
var compression = require('compression');
var errorhandler = require('errorhandler');
var method_override = require('method-override');
var cookie_parser = require('cookie-parser');
var multer = require('multer');
var cors = require('cors');

var app = express();

// Configuration
app.use(compression());
app.use(cookie_parser());
app.use(method_override());
app.use(body_parser.urlencoded({ extended: true })); // x-www-form-urlencoded
app.use(body_parser.json()); // raw, with application/json
app.use(multer().any()); // form-data
app.use(express.static(PATH.join(__dirname, 'static')));

// set the view engine to ejs
app.set('views', PATH.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// CORS
!!config.cors ? app.use(cors(config.cors)) : app.use(cors());

<% if (needsSession) { %>
// Session
var SessionFactory = require('@irysius/anguli-components').SessionFactory;
var session = SessionFactory.create();
app.use(session);
<% } %>
<% if (needsIdentity) { %>
var Identity = require('@irysius/anguli-components').IdentityFactory;
var identity = IdentityFactory.create({
	userLocator: null // TODO: Implement me
});
app.use(identity);
<% } %>

// Routes
var ControllerRouter = require('@irysius/anguli-components').ControllerRouter;
var controllerRouter = ControllerRouter({ 
	express: express, 
	logger: Logger.consoleLogger() 
});
controllerRouter.setup(app, __dirname + '/api');

// Rest of the routes
app.use(function (req, res, next) {
	res.status(404).json({ error: 'Not found' });
});
app.use(errorhandler({ dumpExceptions: true, showStack: true }));

// Start the server
var httpServer = http.createServer(app);
httpServer.on('listening', () => {
	console.log('server listening on port: ' + httpServer.address().port);
});

<% if (needsHub) { %>
// Socket Endpoints
var io = require('socket.io')(httpServer);
var HubRouter = require('@irysius/anguli-components').HubRouter;
var hubRouter = HubRouter({ 
	io: io, 
	logger: Logger.consoleLogger() 
});
hubRouter.setup(__dirname + '/api');s
<% } %>
<% if (needsHub && needsSession) { %>
io.use((socket, next) => {
	session(socket.request, socket.request.res, next);
});
<% } %>
<% if (needsHub && needsIdentity) { %>
io.use((socket, next) => {
	identity(socket.request, socket.request.res, next);
});
<% } %>

httpServer.listen(settings.port);

